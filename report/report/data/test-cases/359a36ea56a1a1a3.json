{
  "uid" : "359a36ea56a1a1a3",
  "name" : "test_data_check_right[SJHY_003-{ \"data\":{\"idcardno\":\"110105200001024952\",\"sex\":\"男\",\"birthday\":\"2000-01-02\"},\n    \"nonce\": \"one3874\",\n    \"timestamp\": 1941761698000,\n    \"sign\": \"af232a3176be2c0ba1f2efb226d4bd481dfe2a1b4a37df80a49785eec95ab833\",\n    \"legerId\": 48,\n    \"chainId\":49,\n    \"appId\": \"rRHm0G\",\n    \"clusterId\": 60\n}-{\n    \"code\": 0,\n    \"msg\": \"数据未上链\",\n    \"path\": \"/rest/data/check\",\n    \"timestamp\": 1626764113794,\n    \"success\": false\n}]",
  "fullName" : "testcase.test_openApi.TestOpenAPI#test_data_check_right",
  "historyId" : "91c965b543e6aa020c38ff0b2fb4a27a",
  "time" : {
    "start" : 1627020624957,
    "stop" : 1627020624929,
    "duration" : -28
  },
  "status" : "failed",
  "statusMessage" : "pytest_assume.plugin.FailedAssumption: \n2 Failed Assumptions:\n\ntest_openApi.py:128: AssumptionFailure\n>>\tpytest.assume(res[\"code\"] == expData[\"code\"])  # int\nAssertionError: assert False\n\ntest_openApi.py:129: AssumptionFailure\n>>\tpytest.assume(res[\"msg\"] == expData[\"msg\"])  # str\nAssertionError: assert False",
  "statusTrace" : "tp = <class 'pytest_assume.plugin.FailedAssumption'>, value = None, tb = None\n\n    def reraise(tp, value, tb=None):\n        try:\n            if value is None:\n                value = tp()\n            if value.__traceback__ is not tb:\n>               raise value.with_traceback(tb)\nE               pytest_assume.plugin.FailedAssumption: \nE               2 Failed Assumptions:\nE               \nE               test_openApi.py:128: AssumptionFailure\nE               >>\tpytest.assume(res[\"code\"] == expData[\"code\"])  # int\nE               AssertionError: assert False\nE               \nE               test_openApi.py:129: AssumptionFailure\nE               >>\tpytest.assume(res[\"msg\"] == expData[\"msg\"])  # str\nE               AssertionError: assert False\n\n..\\venv\\lib\\site-packages\\six.py:718: FailedAssumption",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "feature",
    "value" : "数据核验-正常流"
  }, {
    "name" : "parentSuite",
    "value" : "testcase"
  }, {
    "name" : "suite",
    "value" : "test_openApi"
  }, {
    "name" : "subSuite",
    "value" : "TestOpenAPI"
  }, {
    "name" : "host",
    "value" : "DESKTOP-5UFTAI3"
  }, {
    "name" : "thread",
    "value" : "14072-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testcase.test_openApi"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "caseNum",
    "value" : "'SJHY_003'"
  }, {
    "name" : "expData",
    "value" : "'{\n    \"code\": 0,\n    \"msg\": \"数据未上链\",\n    \"path\": \"/rest/data/check\",\n    \"timestamp\": 1626764113794,\n    \"success\": false\n}'"
  }, {
    "name" : "inData",
    "value" : "'{ \"data\":{\"idcardno\":\"110105200001024952\",\"sex\":\"男\",\"birthday\":\"2000-01-02\"},\n    \"nonce\": \"one3874\",\n    \"timestamp\": 1941761698000,\n    \"sign\": \"af232a3176be2c0ba1f2efb226d4bd481dfe2a1b4a37df80a49785eec95ab833\",\n    \"legerId\": 48,\n    \"chainId\":49,\n    \"appId\": \"rRHm0G\",\n    \"clusterId\": 60\n}'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "359a36ea56a1a1a3.json",
  "parameterValues" : [ "'SJHY_003'", "'{\n    \"code\": 0,\n    \"msg\": \"数据未上链\",\n    \"path\": \"/rest/data/check\",\n    \"timestamp\": 1626764113794,\n    \"success\": false\n}'", "'{ \"data\":{\"idcardno\":\"110105200001024952\",\"sex\":\"男\",\"birthday\":\"2000-01-02\"},\n    \"nonce\": \"one3874\",\n    \"timestamp\": 1941761698000,\n    \"sign\": \"af232a3176be2c0ba1f2efb226d4bd481dfe2a1b4a37df80a49785eec95ab833\",\n    \"legerId\": 48,\n    \"chainId\":49,\n    \"appId\": \"rRHm0G\",\n    \"clusterId\": 60\n}'" ]
}