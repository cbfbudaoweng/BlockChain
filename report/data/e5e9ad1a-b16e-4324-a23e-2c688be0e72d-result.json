{"name": "test_data_query_right[SJCX_005-{ \"data\":{\"ybcode\":\"zhangsan001\",\"sex\":\"男\",\"name\":\"张三\"},\n    \"nonce\": \"two3874\",\n    \"timestamp\": 1941761698000,\n    \"sign\": \"4fd2fe34a2670aee7167b3e74a365cdb70310f60caf85ebbbb294e838885f4ce\",\n    \"legerId\": 49,\n    \"chainId\":52,\n    \"appId\": \"rRHm0G\",\n    \"clusterId\": 61\n}-{\n    \"code\": 200,\n    \"msg\": \"成功\",\n    \"data\": {\n        \"data\": {\n            \"appId\": \"rRHm0G\",\n            \"chainId\": 52,\n            \"clusterId\": 61,\n            \"details\": {\n                \"name\": \"张三\",\n                \"sex\": \"男\",\n                \"ybcode\": \"zhangsan001\"\n            },\n            \"legerId\": 49,\n            \"orgId\": 3\n        }\n    },\n    \"timestamp\": 1626765374400,\n    \"success\": true\n}]", "status": "failed", "statusDetails": {"message": "pytest_assume.plugin.FailedAssumption: \n3 Failed Assumptions:\n\ntest_openApi.py:92: AssumptionFailure\n>>\tpytest.assume(res[\"code\"] == expData[\"code\"])  # int\nAssertionError: assert False\n\ntest_openApi.py:93: AssumptionFailure\n>>\tpytest.assume(res[\"msg\"] == expData[\"msg\"])  # str\nAssertionError: assert False\n\ntest_openApi.py:94: AssumptionFailure\n>>\tpytest.assume(res[\"success\"] == expData[\"success\"])  # bool\nAssertionError: assert False", "trace": "tp = <class 'pytest_assume.plugin.FailedAssumption'>, value = None, tb = None\n\n    def reraise(tp, value, tb=None):\n        try:\n            if value is None:\n                value = tp()\n            if value.__traceback__ is not tb:\n>               raise value.with_traceback(tb)\nE               pytest_assume.plugin.FailedAssumption: \nE               3 Failed Assumptions:\nE               \nE               test_openApi.py:92: AssumptionFailure\nE               >>\tpytest.assume(res[\"code\"] == expData[\"code\"])  # int\nE               AssertionError: assert False\nE               \nE               test_openApi.py:93: AssumptionFailure\nE               >>\tpytest.assume(res[\"msg\"] == expData[\"msg\"])  # str\nE               AssertionError: assert False\nE               \nE               test_openApi.py:94: AssumptionFailure\nE               >>\tpytest.assume(res[\"success\"] == expData[\"success\"])  # bool\nE               AssertionError: assert False\n\n..\\venv\\lib\\site-packages\\six.py:718: FailedAssumption"}, "parameters": [{"name": "caseNum", "value": "'SJCX_005'"}, {"name": "inData", "value": "'{ \"data\":{\"ybcode\":\"zhangsan001\",\"sex\":\"男\",\"name\":\"张三\"},\n    \"nonce\": \"two3874\",\n    \"timestamp\": 1941761698000,\n    \"sign\": \"4fd2fe34a2670aee7167b3e74a365cdb70310f60caf85ebbbb294e838885f4ce\",\n    \"legerId\": 49,\n    \"chainId\":52,\n    \"appId\": \"rRHm0G\",\n    \"clusterId\": 61\n}'"}, {"name": "expData", "value": "'{\n    \"code\": 200,\n    \"msg\": \"成功\",\n    \"data\": {\n        \"data\": {\n            \"appId\": \"rRHm0G\",\n            \"chainId\": 52,\n            \"clusterId\": 61,\n            \"details\": {\n                \"name\": \"张三\",\n                \"sex\": \"男\",\n                \"ybcode\": \"zhangsan001\"\n            },\n            \"legerId\": 49,\n            \"orgId\": 3\n        }\n    },\n    \"timestamp\": 1626765374400,\n    \"success\": true\n}'"}], "start": 1627020600181, "stop": 1627020600165, "uuid": "0a7025b3-ed05-4a48-a269-1469b2a1272b", "historyId": "bef7173d0249d8d4b569e7bd61f81c11", "testCaseId": "7d35ab67b71a346022dc496181cf9149", "fullName": "testcase.test_openApi.TestOpenAPI#test_data_query_right", "labels": [{"name": "feature", "value": "数据查询-正常流"}, {"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test_openApi"}, {"name": "subSuite", "value": "TestOpenAPI"}, {"name": "host", "value": "DESKTOP-5UFTAI3"}, {"name": "thread", "value": "14072-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_openApi"}]}